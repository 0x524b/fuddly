PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

CREATE TABLE CONF (
    ITEM  TEXT    PRIMARY KEY
                  UNIQUE
                  NOT NULL,
    VALUE BOOLEAN
);

CREATE TABLE PROJECT (
    NAME TEXT PRIMARY KEY
               COLLATE NOCASE
               NOT NULL
               UNIQUE ON CONFLICT IGNORE
);

CREATE TABLE DATAMODEL (
    NAME TEXT PRIMARY KEY
               COLLATE NOCASE
               NOT NULL
               UNIQUE ON CONFLICT IGNORE
);

CREATE TABLE DMAKERS (
    DM_NAME   TEXT REFERENCES DATAMODEL (NAME),
    TYPE      TEXT,
    NAME      TEXT,
    CLONE_TYPE     TEXT,
    CLONE_NAME     TEXT,
    GENERATOR  BOOLEAN,
    STATEFUL  BOOLEAN,
    PRIMARY KEY (
        TYPE,
        NAME
    ) ON CONFLICT IGNORE,
    FOREIGN KEY (
        CLONE_TYPE,
        CLONE_NAME
    )
    REFERENCES DMAKERS (TYPE,
    NAME)
);

CREATE TABLE DATA (
    ID        INTEGER  PRIMARY KEY ASC AUTOINCREMENT,
    GROUP_ID  INTEGER,
    TYPE      TEXT,
    DM_NAME   TEXT REFERENCES DATAMODEL (NAME),
    CONTENT   BLOB,
    SIZE      INTEGER,
    SENT_DATE DATETIME,
    ACK_DATE  DATETIME
);

CREATE TABLE STEPS (
    DATA_ID     INTEGER REFERENCES DATA (ID),
    STEP_ID     INTEGER,
    DMAKER_TYPE TEXT,
    DMAKER_NAME TEXT,
    USER_INPUT  TEXT,
    INFO        BLOB,
    PRIMARY KEY (
        DATA_ID,
        STEP_ID
    ),
    FOREIGN KEY (
        DMAKER_TYPE,
        DMAKER_NAME
    )
    REFERENCES DMAKERS (TYPE,
    NAME)
);

CREATE TABLE FEEDBACK (
    DATA_ID  INTEGER REFERENCES DATA (ID),
    SOURCE   TEXT,
    CONTENT BLOB,
    PRIMARY KEY (
        DATA_ID,
        SOURCE
    )
);

CREATE TABLE COMMENTS (
    ID        INTEGER  PRIMARY KEY ASC AUTOINCREMENT,
    DATA_ID   INTEGER REFERENCES DATA (ID),
    CONTENT   TEXT,
    DATE      DATETIME
);

CREATE TABLE FMKINFO (
    ID        INTEGER  PRIMARY KEY ASC AUTOINCREMENT,
    DATA_ID   INTEGER REFERENCES DATA (ID),
    CONTENT   TEXT,
    DATE      DATETIME,
    ERROR     BOOLEAN
);

CREATE TABLE PROJECT_RECORDS (
    PRJ_NAME TEXT REFERENCES PROJECT (NAME),
    DATA_ID INTEGER REFERENCES DATA (ID),
    TARGET TEXT,
    PRIMARY KEY (
        PRJ_NAME,
        DATA_ID
    )
);

COMMIT TRANSACTION;
PRAGMA foreign_keys = on;
